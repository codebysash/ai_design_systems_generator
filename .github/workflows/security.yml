name: Security Scan

on:
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run npm audit
        run: |
          npm audit --json > npm-audit.json || true
          echo "## NPM Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "```json" >> $GITHUB_STEP_SUMMARY
          cat npm-audit.json >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY

      - name: Check for critical vulnerabilities
        run: |
          CRITICAL_COUNT=$(npm audit --json | jq '.metadata.vulnerabilities.critical // 0')
          if [ "$CRITICAL_COUNT" -gt 0 ]; then
            echo "❌ Found $CRITICAL_COUNT critical vulnerabilities!" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ No critical vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Run Snyk test
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --severity-threshold=high

      - name: Upload dependency check results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-scan-results
          path: |
            npm-audit.json
            snyk-report.json
          retention-days: 30

  codeql-analysis:
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  license-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Check licenses
        run: |
          npx license-checker --production --summary --out license-report.txt
          echo "## License Summary" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          cat license-report.txt >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY

      - name: Check for problematic licenses
        run: |
          # Check for GPL, AGPL, or other copyleft licenses that might be problematic
          PROBLEMATIC=$(npx license-checker --production --onlyAllow 'MIT;ISC;BSD-2-Clause;BSD-3-Clause;Apache-2.0;CC0-1.0;CC-BY-3.0;CC-BY-4.0;Unlicense' --summary 2>&1 | grep -c "error" || true)
          if [ "$PROBLEMATIC" -gt 0 ]; then
            echo "⚠️ Found potentially problematic licenses!" >> $GITHUB_STEP_SUMMARY
            npx license-checker --production --exclude 'MIT;ISC;BSD-2-Clause;BSD-3-Clause;Apache-2.0;CC0-1.0;CC-BY-3.0;CC-BY-4.0;Unlicense' >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ All licenses are compatible" >> $GITHUB_STEP_SUMMARY
          fi